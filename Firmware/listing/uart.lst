C51 COMPILER V7.50   UART                                                                  04/04/2016 16:05:20 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c LARGE BROWSE INCDIR(.\include\) DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\uart.lst) OBJECT(.\output\uart.obj)

line level    source

   1          #include <uart.h>
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          #include <parameter.h>
   5          #include <dispatch.h>
   6          #include <timer.h>
   7          
   8          #define FOSC 11059200L      //System frequency
   9          #define BAUD 115200         //UART baudrate
  10          
  11          /*Define UART parity mode*/
  12          #define NONE_PARITY     0   //None parity
  13          #define ODD_PARITY      1   //Odd parity
  14          #define EVEN_PARITY     2   //Even parity
  15          #define MARK_PARITY     3   //Mark parity
  16          #define SPACE_PARITY    4   //Space parity
  17          
  18          #define PARITYBIT NONE_PARITY   //Testing even parity
  19          
  20          /*Declare SFR associated with the UART2 */
  21          sfr AUXR  = 0x8e;           //Auxiliary register
  22          sfr S2CON = 0x9a;           //UART2 control register
  23          sfr S2BUF = 0x9b;           //UART2 data buffer
  24          sfr BRT   = 0x9c;           //Baudrate generator
  25          sfr IE2   = 0xaf;           //Interrupt control 2
  26          
  27          #define S2RI  0x01          //S2CON.0
  28          #define S2TI  0x02          //S2CON.1
  29          #define S2RB8 0x04          //S2CON.2
  30          #define S2TB8 0x08          //S2CON.3
  31          
  32          bit busy;
  33          bit uartReceiveOK = 0;
  34          BYTE saveSetting = 0; //是否保存设置值状态位 0：不保存 1：保存设置值 2：保存运行状态
  35          
  36          BYTE uartBuffer[15] = {0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
  37          
  38          BYTE receiveSteps = 0;  // 0: 没有数据接收
  39                                                          // 1: 接收到5A
  40                                                          // 2：接收到A5
  41                                                          // 3：接收到数据长度
  42                                                          // 4: 接收数据
  43                                                          // 5：确定指令动作
  44          BYTE dataIndex = 0;
  45          BYTE dataLength = 0;
  46            
  47          void SendData(BYTE dat);
  48          void ReceiveData(BYTE dat);
  49          void anyData();
  50          
  51          void uart_init()
  52          {
  53   1      #if (PARITYBIT == NONE_PARITY)
  54   1          S2CON = 0x50;           //8-bit variable UART
C51 COMPILER V7.50   UART                                                                  04/04/2016 16:05:20 PAGE 2   

  55   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  S2CON = 0xda;           //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                  S2CON = 0xd2;           //9-bit variable UART, parity bit initial to 0
              #endif
  60   1      
  61   1          BRT = -(FOSC/32/BAUD);  //Set auto-reload vaule of baudrate generator
  62   1          AUXR |= 0x14;            //Baudrate generator work in 1T mode
  63   1          IE2 = 0x01;             //Enable UART2 interrupt
  64   1          EA = 1;                 //Open master interrupt switch
  65   1      
  66   1          //SendString("STC12C5A60S2\r\nUart2 Test !\r\n");
  67   1          //while(1);
  68   1      }
  69          
  70          /*----------------------------
  71          UART2 interrupt service routine
  72          ----------------------------*/
  73          void Uart2() interrupt 8 using 1
  74          {
  75   1          if (S2CON & S2RI)
  76   1          {
  77   2              S2CON &= ~S2RI;     //Clear receive interrupt flag
  78   2              ReceiveData(S2BUF);
  79   2                      //P2 = S2BUF;         //P0 show UART data
  80   2              //P2 = (S2CON & S2RB8);//P2.2 show parity bit
  81   2          }
  82   1          if (S2CON & S2TI)
  83   1          {
  84   2              S2CON &= ~S2TI;     //Clear transmit interrupt flag
  85   2              busy = 0;           //Clear transmit busy flag
  86   2          }
  87   1      }
  88          
  89          /*----------------------------
  90          Send a byte data to UART
  91          Input: dat (data to be sent)
  92          Output:None
  93          ----------------------------*/
  94          void SendData(BYTE dat)
  95          {
  96   1          while (busy);           //Wait for the completion of the previous data is sent
  97   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  98   1          if (P)                  //Set the parity bit according to P
  99   1          {
 100   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #endif
 105   2          }
 106   1          else
 107   1          {
 108   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON |= S2TB8;     //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON &= ~S2TB8;    //Set parity bit to 0
              #endif
 113   2          }
 114   1          busy = 1;
 115   1          S2BUF = ACC;            //Send data to UART2 buffer
 116   1      }
C51 COMPILER V7.50   UART                                                                  04/04/2016 16:05:20 PAGE 3   

 117          
 118          void SendDataToScreen(WORD address, WORD dat)
 119          {
 120   1              SendData(0x5A);
 121   1              SendData(0xA5);
 122   1              SendData(0x05);
 123   1              SendData(0x82);
 124   1              SendData(address>>8);
 125   1              SendData(address);
 126   1              SendData(dat>>8);
 127   1              SendData(dat);
 128   1      }
 129          
 130          void ChangeScreenPage(WORD page)
 131          {
 132   1              SendData(0x5A);
 133   1              SendData(0xA5);
 134   1              SendData(0x04);
 135   1              SendData(0x80);
 136   1              SendData(0x03);
 137   1              SendData(page>>8);
 138   1              SendData(page);
 139   1      }
 140          
 141          void ReceiveData(BYTE dat)
 142          {
 143   1              // 0: 接收到5A
 144   1              // 1：接收到A5
 145   1              // 2：接收到数据长度
 146   1              // 3: 接收数据
 147   1              // 4：确定指令动作
 148   1              switch(receiveSteps)
 149   1              {
 150   2                      case 0:
 151   2                              if(dat == 0x5A)
 152   2                              {
 153   3                                      receiveSteps ++;
 154   3                              }
 155   2                      break;
 156   2                      case 1:
 157   2                              if(dat == 0xA5)
 158   2                              {
 159   3                                      receiveSteps ++;
 160   3                              }
 161   2                              else
 162   2                              {
 163   3                                      receiveSteps = 0;
 164   3                              }
 165   2                      break;
 166   2                      case 2:
 167   2                              dataLength = dat;
 168   2                              dataIndex = 0;
 169   2                              receiveSteps ++;
 170   2                      break;
 171   2                      case 3:
 172   2                              uartBuffer[dataIndex] = dat;
 173   2                              dataIndex ++;
 174   2                              if(dataIndex >= dataLength)
 175   2                              {
 176   3                                      anyData();
 177   3                                      receiveSteps = 0;
 178   3                              }
C51 COMPILER V7.50   UART                                                                  04/04/2016 16:05:20 PAGE 4   

 179   2                      break;
 180   2                      default:
 181   2                              _nop_();
 182   2                              receiveSteps = 0;
 183   2              }
 184   1      }
 185          
 186          void anyData()
 187          {
 188   1              WORD dat = ((uartBuffer[4]<<8) | uartBuffer[5]);
 189   1              
 190   1      
 191   1              if(uartBuffer[2] == 0x06)//回零按钮
 192   1              {
 193   2                      //pulseSettingNum =  dat;
 194   2                      //saveSetting = 1;
 195   2              }
 196   1              else if(uartBuffer[2] == 0x08) //运行按钮
 197   1              {
 198   2                      //pulseSettingFreq =  dat;
 199   2                      //saveSetting = 1;
 200   2              }
 201   1              else if(uartBuffer[2] == 0x0A) //停止按钮
 202   1              {
 203   2                      //motorStepAngle =  dat;
 204   2                      //saveSetting = 1;
 205   2              }
 206   1              else if(uartBuffer[2] == 0x0C) //前进按钮
 207   1              {
 208   2                      //screwPitch =  dat;
 209   2                      //saveSetting = 1;
 210   2              }
 211   1              else if(uartBuffer[2] == 0x10)  //跟随按钮
 212   1              {
 213   2                      //motorReducGearRatio =  dat;
 214   2                      //saveSetting = 1;
 215   2              }
 216   1              else if(uartBuffer[2] == 0x1E) //保存按钮
 217   1              {
 218   2                      saveSetting = 1;
 219   2              }
 220   1              else if(uartBuffer[2] == 0x20) //返回按钮
 221   1              {
 222   2      
 223   2              }
 224   1              else if(uartBuffer[2] >= 0x12 && uartBuffer[2] <= 0x1C) //过程设置按钮
 225   1              {
 226   2                      motorCurrentRatationGroup = (uartBuffer[2] - 0x12)>>1;
 227   2                      displayMode = motorCurrentRatationGroup + 2; //刷新显示
 228   2              }
 229   1              else if(uartBuffer[2] >= 0x2E && uartBuffer[2] <= 0x7C) //过程设置值
 230   1              {
 231   2                      motorRotationAngle[motorCurrentRatationGroup][(uartBuffer[2] - 0x2E)>>1] = dat;
 232   2              }
 233   1      
 234   1              uartReceiveOK = 1;      
 235   1      }
 236          
 237          void refreshDisplaySetting()
 238          {
 239   1              BYTE i;
 240   1              //设置按钮显示非选中
C51 COMPILER V7.50   UART                                                                  04/04/2016 16:05:20 PAGE 5   

 241   1              SendDataToScreen(0x0022, 0);
 242   1              SendDataToScreen(0x0024, 0);
 243   1              SendDataToScreen(0x0026, 0);
 244   1              SendDataToScreen(0x0028, 0);
 245   1              SendDataToScreen(0x002A, 0);
 246   1              SendDataToScreen(0x002C, 0);
 247   1              //设置按钮显示当前选中
 248   1              SendDataToScreen((motorCurrentRatationGroup<<1)+0x22, 1);
 249   1              //当组设置值
 250   1              for(i=0; i < 40; i++)
 251   1              {
 252   2                      SendDataToScreen(0x002E + (i<<1) ,motorRotationAngle[motorCurrentRatationGroup][i]);
 253   2                      
 254   2              }
 255   1      }
 256          
 257          void refreshDisplayRunning()
 258          {
 259   1              
 260   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    533    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
